/**
 * plugin.js
 *
 * Copyright, Alberto Peripolli
 * Released under Creative Commons Attribution-NonCommercial 3.0 Unported License.
 *
 * Contributing: https://github.com/trippo/ResponsiveFilemanager
 */

tinymce.PluginManager.add('filemanager', function(editor) {

	editor.settings.file_browser_callback = filemanager;

	function filemanager_onMessage(event){
		if(editor.settings.external_filemanager_path.toLowerCase().indexOf(event.origin.toLowerCase()) === 0){
			if(event.data.sender === 'responsivefilemanager'){
				tinymce.activeEditor.windowManager.getParams().setUrl(event.data.url);
				tinymce.activeEditor.windowManager.close();

				// Remove event listener for a message from ResponsiveFilemanager
				if(window.removeEventListener){
					window.removeEventListener('message', filemanager_onMessage, false);
				} else {
					window.detachEvent('onmessage', filemanager_onMessage);
				}
			}
		}
	}

	function filemanager (id, value, type, win) {
		var width = window.innerWidth-30;
		var height = window.innerHeight-60;
		if(width > 1800) width=1800;
		if(height > 1200) height=1200;
		if(width>600){
			var width_reduce = (width - 20) % 138;
			width = width - width_reduce + 10;
		}

		// DEFAULT AS FILE
		urltype=2;
		if (type=='image') { urltype=1; }
		if (type=='media') { urltype=3; }
		var title="RESPONSIVE FileManager";
		if (typeof editor.settings.filemanager_title !== "undefined" && editor.settings.filemanager_title) {
			title=editor.settings.filemanager_title;
		}
		var akey="key";
		if (typeof editor.settings.filemanager_access_key !== "undefined" && editor.settings.filemanager_access_key) {
			akey=editor.settings.filemanager_access_key;
		}
		var sort_by="";
		if (typeof editor.settings.filemanager_sort_by !== "undefined" && editor.settings.filemanager_sort_by) {
			sort_by="&sort_by="+editor.settings.filemanager_sort_by;
		}
		var descending=0;
		if (typeof editor.settings.filemanager_descending !== "undefined" && editor.settings.filemanager_descending) {
			descending=editor.settings.filemanager_descending;
		}
		var fldr="";
		if (typeof editor.settings.filemanager_subfolder !== "undefined" && editor.settings.filemanager_subfolder) {
			fldr="&fldr="+editor.settings.filemanager_subfolder;
		}
		var crossdomain="";
		if (typeof editor.settings.filemanager_crossdomain !== "undefined" && editor.settings.filemanager_crossdomain) {
			crossdomain="&crossdomain=1";

			// Add handler for a message from ResponsiveFilemanager
			if(window.addEventListener){
				window.addEventListener('message', filemanager_onMessage, false);
			} else {
				window.attachEvent('onmessage', filemanager_onMessage);
			}
		}

		//tinymce.activeEditor.windowManager.open(
          // console.log(id);
		//);
        //console.log('sfds');

        tinymce_button_file_uploader(editor,id,value,win, type);

		return urltype;
	};

    function tinymce_button_file_uploader(ed,id,value,win,type) {


        // DEFAULT AS FILE
        urltype=2;
        if (type=='image') { urltype=1; }
        if (type=='media') { urltype=3; }

console.log('url '+urltype);
        console.log($('#tinymce_file_uploader input[type=file]').prop('accept'));
        if (urltype==1) {
            $('#tinymce_file_uploader input[type=file]').prop('accept','image/*')
		}

        $('#tinymce_file_uploader input[type=file]').click();

        $('#tiny_inner_image').off().on('change', function (event) {

            $('#tinymce_file_uploader input[type=file]').prop('accept','image/*')
            //event.stopPropagation();
            //event.preventDefault();

            console.log(event);

            formElement = document.getElementById("tinymce_file_uploader");
            data = new FormData(formElement);

            $.ajax({
                url: $('#tinymce_file_uploader').attr('action'),
                type: 'POST',
                data: data,
                contentType: false,
                processData: false,
                success: function (response) {
                    if (typeof(tinymce) != 'undefined') {
                        //ed.selection.setContent(response);
						console.log(response);
                        console.log(id);

                        var input = '#'+id;

						$(input).val(response);
                        console.log($(input + ' + input'));


                        $('#'+id).triggerHandler( "change" );
                    }
                },
                error: function () {
                    //ed.windowManager.alert(win);

                    //console.log(win);

                    //alert('Whoa! Something goes wrong. Try again later');
                    //$('#'+id).val('http://demo.self/source/15253370_1618696791765904_7567905798604912224_n%20(2).jpg');
                    //$('#'+id).trigger("mouseleave");
                    //$('#'+id).trigger("change");
                    $('#'+id).triggerHandler( "change" );
                    $('#'+id).triggerHandler( "focus" );
                    $('#'+id).triggerHandler( "keypress" );
                }
            });
        });

        return false;
    }

	return false;
});
